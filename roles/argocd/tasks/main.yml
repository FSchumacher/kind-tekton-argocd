---

- name: Create Argocd Namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ argocd_k8s_namespace }}"
    state: "present"
  run_once: true

- name: "ArgoCD workflow"
  run_once: true
  block:
    - name: Download ArgoCD manifests
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        dest: /tmp/argocd_install.yaml
        mode: 0440

    - name: Apply manifests to cluster
      kubernetes.core.k8s:
        namespace: "{{ argocd_k8s_namespace }}"
        src: /tmp/argocd_install.yaml
        state: "present"
  always:
    - name: Cleanup installation
      ansible.builtin.file:
        path: /tmp/argocd_install.yaml
        state: absent

- name: Download command line tool
  ansible.builtin.get_url:
    url: "{{ argocd_cli_url }}"
    dest: "{{ argocd_cli_path }}"
    mode: 0755

- name: Wait for argocd to be ready
  ansible.builtin.shell:
    cmd: kubectl wait deployment/argocd-server --for=condition=available --timeout=300s -n "{{ argocd_k8s_namespace }}"

- name: Port forward argocd service
  ansible.builtin.command: kubectl -n "{{ argocd_k8s_namespace }}" port-forward svc/argocd-server 8443:443
  async: 30
  poll: 0
  register: _port_forward

- name: Wait for port forward to start
  async_status:
    jid: "{{ _port_forward.ansible_job_id }}"

- name: Manage admin user
  ansible.builtin.import_tasks: users.yml
